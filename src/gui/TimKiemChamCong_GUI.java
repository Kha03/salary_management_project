package gui;

import connect.ConnectDB;
import entity.ChamCongNhanVien;
import handle.borderselected.Border_Selected;
import java.sql.SQLException;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import dao.ChamCongHanhChanh_Dao;
import dao.ChamCongSanPham_Dao;
import entity.ChamCongSanPham;
import java.text.SimpleDateFormat;
/**
 *
 * @author ADMIN
 */
public class TimKiemChamCong_GUI extends javax.swing.JPanel {

    private SimpleDateFormat dinhDangNgay;

    /**
     * Creates new form NhanVienHanhChinh
     * @throws java.sql.SQLException
     */
    public TimKiemChamCong_GUI()throws SQLException {
        initComponents();
        setTable();
        initCommon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnThayDoiTim = new javax.swing.ButtonGroup();
        btnGroupTrangThai = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnTim = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        txtMa = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblPhongBan = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblSoLuong = new javax.swing.JLabel();
        lblTangCa = new javax.swing.JLabel();
        cmbPhongBan = new javax.swing.JComboBox<>();
        radNhanVienSanXuat = new javax.swing.JRadioButton();
        cmbPhanXuong = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        chkTu = new javax.swing.JCheckBox();
        spnTangCa = new javax.swing.JSpinner();
        radNhanVienHanhChinh = new javax.swing.JRadioButton();
        lblCongDoan = new javax.swing.JLabel();
        cmbCongDoan = new javax.swing.JComboBox<>();
        cmbSanPham = new javax.swing.JComboBox<>();
        dchNgayChamCong = new com.toedter.calendar.JDateChooser();
        dchTu = new com.toedter.calendar.JDateChooser();
        cmbTrangThai = new javax.swing.JComboBox<>();
        lblTrangThai = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(59, 96, 59), 2), "Danh Sách Nhân Viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 99, 0))); // NOI18N

        jTable1.setBackground(new java.awt.Color(184, 206, 224));
        jTable1.setToolTipText("");
        jTable1.setSelectionBackground(new java.awt.Color(144, 237, 144));
        jTable1.setSelectionForeground(new java.awt.Color(51, 51, 51));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 277, 1300, 465));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnTim.setBackground(new java.awt.Color(152, 249, 152));
        btnTim.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
        btnTim.setText("Tìm Kiếm");
        btnTim.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });
        jPanel1.add(btnTim, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 190, 130, 30));

        jButton10.setBackground(new java.awt.Color(152, 249, 152));
        jButton10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/reset.png"))); // NOI18N
        jButton10.setText("Làm Mới");
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 190, 120, 30));

        txtMa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMa.setForeground(new java.awt.Color(0, 96, 0));
        txtMa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaFocusLost(evt);
            }
        });
        txtMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaActionPerformed(evt);
            }
        });
        jPanel1.add(txtMa, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 190, -1));

        txtTen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTen.setForeground(new java.awt.Color(0, 96, 0));
        txtTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenActionPerformed(evt);
            }
        });
        jPanel1.add(txtTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 190, -1));

        txtSoLuong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSoLuong.setForeground(new java.awt.Color(0, 96, 0));
        jPanel1.add(txtSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 130, 50, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Họ Và Tên:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 120, -1));

        lblPhongBan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPhongBan.setText("Phòng Ban:");
        jPanel1.add(lblPhongBan, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 120, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Mã Nhân Viên:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 120, -1));

        lblSoLuong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSoLuong.setText("Số Lượng:");
        jPanel1.add(lblSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 130, 120, -1));

        lblTangCa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTangCa.setText("Giờ Tăng Ca:");
        jPanel1.add(lblTangCa, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, 120, -1));

        cmbPhongBan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbPhongBan.setForeground(new java.awt.Color(0, 99, 0));
        cmbPhongBan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phòng Tài Chính Kế Toán", "Phòng Nhân Sự" }));
        jPanel1.add(cmbPhongBan, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, 190, -1));

        btnThayDoiTim.add(radNhanVienSanXuat);
        radNhanVienSanXuat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        radNhanVienSanXuat.setForeground(new java.awt.Color(0, 96, 0));
        radNhanVienSanXuat.setText("Nhân Viên Sản Xuất");
        radNhanVienSanXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radNhanVienSanXuatActionPerformed(evt);
            }
        });
        jPanel1.add(radNhanVienSanXuat, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 190, -1));

        cmbPhanXuong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbPhanXuong.setForeground(new java.awt.Color(0, 99, 0));
        cmbPhanXuong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Xưởng Lắp Ráp", "Xưởng Chế Tác" }));
        jPanel1.add(cmbPhanXuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, 190, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Ngày Chấm Công:");
        jLabel14.setToolTipText("");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 130, -1));

        chkTu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chkTu.setForeground(new java.awt.Color(0, 96, 0));
        chkTu.setText("Từ");
        chkTu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTuActionPerformed(evt);
            }
        });
        jPanel1.add(chkTu, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 50, 50, 20));
        jPanel1.add(spnTangCa, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 130, 90, -1));

        btnThayDoiTim.add(radNhanVienHanhChinh);
        radNhanVienHanhChinh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        radNhanVienHanhChinh.setForeground(new java.awt.Color(0, 96, 0));
        radNhanVienHanhChinh.setSelected(true);
        radNhanVienHanhChinh.setText("Nhân Viên Hành Chính");
        radNhanVienHanhChinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radNhanVienHanhChinhActionPerformed(evt);
            }
        });
        jPanel1.add(radNhanVienHanhChinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 190, -1));

        lblCongDoan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCongDoan.setText("Công Đoạn:");
        jPanel1.add(lblCongDoan, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 90, 120, -1));

        cmbCongDoan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbCongDoan.setForeground(new java.awt.Color(0, 99, 0));
        cmbCongDoan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trộn Nguyên Liệu", "Tạo Hình", "Lắp Ráp", "Làm Nguội", "Ép đùn" }));
        jPanel1.add(cmbCongDoan, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 90, 190, -1));

        cmbSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbSanPham.setForeground(new java.awt.Color(0, 99, 0));
        cmbSanPham.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ống nhựa", "Bao bì nhựa", "Gỗ nhựa" }));
        jPanel1.add(cmbSanPham, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 130, 190, -1));

        dchNgayChamCong.setDateFormatString("dd/MM/yyyy");
        jPanel1.add(dchNgayChamCong, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 140, -1));

        dchTu.setDateFormatString("dd/MM/yyyy");
        jPanel1.add(dchTu, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 50, 130, -1));

        cmbTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đi Làm", "Nghỉ" }));
        jPanel1.add(cmbTrangThai, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 130, 120, -1));

        lblTrangThai.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTrangThai.setText("Trang Thai:");
        jPanel1.add(lblTrangThai, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 130, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1294, 230));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Tìm Kiếm Chấm Công");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1294, 50));
    }// </editor-fold>//GEN-END:initComponents
    private void setTable() {
        //setTable ở đây
        modelChamCongHanhChinh = new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "STT", "Phòng ban", "Họ và tên", "Mã nhân viên", "Ngày chấm", "Trạng thái", "Tăng ca"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        //model san pham
        modelChamCongSanPham = new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "STT", "Phân Xưởng", "Họ và tên", "Mã nhân viên", "Ngày làm", "Sản phẩm", "Công đoạn", "Đơn giá", "Số lượng", "Tiền lương"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class,
                java.lang.String.class

            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        jTable1.setModel(modelChamCongHanhChinh);

//        DefaultTableCellRenderer center = new DefaultTableCellRenderer();
//        center.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        jTable1.getTableHeader().setBackground(new java.awt.Color(50, 205, 50));
        cmbPhongBan.setSelectedIndex(-1);
        dchTu.setVisible(false);
        cmbTrangThai.setSelectedIndex(-1);
        cmbCongDoan.setSelectedIndex(-1);
        cmbSanPham.setSelectedIndex(-1);
        cmbPhanXuong.setSelectedIndex(-1);
        
    }
    private void txtMaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaFocusGained
        // TODO add your handling code here:
        txtMa.setBorder(Border_Selected.getFocuBofocusBorder());
    }//GEN-LAST:event_txtMaFocusGained

    private void txtMaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaFocusLost
        // TODO add your handling code here:
        txtMa.setBorder(Border_Selected.getOriginalBorder());
    }//GEN-LAST:event_txtMaFocusLost

    private void txtMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaActionPerformed
        // System.out.println(jTextField2.getBorder());        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaActionPerformed

    private void radNhanVienSanXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radNhanVienSanXuatActionPerformed
        cmbPhanXuong.setVisible(true);
        cmbSanPham.setVisible(true);
        lblCongDoan.setVisible(true);
        cmbCongDoan.setVisible(true);
        lblSoLuong.setVisible(true);
        txtSoLuong.setVisible(true);

        lblTangCa.setText("Sản Phẩm:");
        lblPhongBan.setText("Phân Xưởng:");
        cmbPhongBan.setVisible(false);
        cmbTrangThai.setVisible(false);
        lblTrangThai.setVisible(false);
//        radNghi.setVisible(false);
//        radTatCa.setVisible(false);
//        radDiLam.setVisible(false);
        spnTangCa.setVisible(false);
        jTable1.setModel(modelChamCongSanPham);
        // TODO add your handling code here:
    }//GEN-LAST:event_radNhanVienSanXuatActionPerformed

    private void chkTuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTuActionPerformed
        // TODO add your handling code here:
       if (chkTu.isSelected()) {
            dchTu.setVisible(true);
        }
        else{
            dchTu.setVisible(false);
        }
    }//GEN-LAST:event_chkTuActionPerformed

    private void radNhanVienHanhChinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radNhanVienHanhChinhActionPerformed
        // TODO add your handling code here:
        cmbPhanXuong.setVisible(false);
        cmbSanPham.setVisible(false);
        lblCongDoan.setVisible(false);
        cmbCongDoan.setVisible(false);
        lblSoLuong.setVisible(false);
        txtSoLuong.setVisible(false);

        lblTangCa.setText("Giờ Tăng Ca:");
        lblPhongBan.setText("Phòng Ban:");
        cmbPhongBan.setVisible(true);
        cmbTrangThai.setVisible(true);
        lblTrangThai.setVisible(true);
//        radNghi.setVisible(true);
//        radTatCa.setVisible(true);
//        radDiLam.setVisible(true);
        spnTangCa.setVisible(true);
        jTable1.setModel(modelChamCongHanhChinh);
    }//GEN-LAST:event_radNhanVienHanhChinhActionPerformed

    private void txtTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:\
        if(radNhanVienHanhChinh.isSelected()){
            timkiemChamCongHC();
        }
        else{
            timkiemCCSP();
        }
    }//GEN-LAST:event_btnTimActionPerformed
    private void initCommon()throws SQLException {
        ConnectDB.getInstance();
        ConnectDB.connect();
        chamCongHanhChanh_Dao = new ChamCongHanhChanh_Dao();
        chamCongSanPham_Dao = new ChamCongSanPham_Dao();
        border_Selected = new Border_Selected();
        cmbPhanXuong.setVisible(false);
        cmbSanPham.setVisible(false);
        lblCongDoan.setVisible(false);
        cmbCongDoan.setVisible(false);
        lblSoLuong.setVisible(false);
        txtSoLuong.setVisible(false);
        dinhDangNgay = new SimpleDateFormat("dd/MM/yyyy");
        doDuLieu();
    }

    private void timkiemChamCongHC(){
        modelChamCongHanhChinh.setRowCount(0); // Xóa dữ liệu hiện tại trong bảng để hiển thị kết quả tìm kiếm mới
        
        int i=1;
        for(ChamCongNhanVien cchc : chamCongHanhChanh_Dao.getDanhSachChamCongNhanVien()){
            boolean thoaMan = false;
            if (!txtMa.getText().isEmpty()) {
                if (cchc.getNhanVienHanhChanh().getMaNhanVienHanhChanh().equalsIgnoreCase(txtMa.getText())) {
                    thoaMan = true;
                }
            }
            if (!txtTen.getText().isEmpty()) {
                if (cchc.getNhanVienHanhChanh().getHoVaTen().equalsIgnoreCase(txtTen.getText())) {
                    thoaMan = true;
                }
            }
            if (chkTu.isSelected()) {
                System.out.println(dinhDangNgay.format(dchNgayChamCong.getDate()));
                 System.out.println(dinhDangNgay.format(dchTu.getDate()));
                System.out.println(dinhDangNgay.format(cchc.getNgayLamViec()));
                if (dchTu.getDate() != null && dchNgayChamCong.getDate() != null) {
                    if (!cchc.getNgayLamViec().before(dchTu.getDate()) &&
                        cchc.getNgayLamViec().before(dchNgayChamCong.getDate())) {
                        thoaMan = true;
                    }
                }
            }   else{
                if (dchNgayChamCong.getDate() != null) {
                    if(dinhDangNgay.format(cchc.getNgayLamViec()).equalsIgnoreCase(dinhDangNgay.format(dchNgayChamCong.getDate()))) {
                        thoaMan = true;
                    }
                }
            }
            if (spnTangCa != null) {
                if (String.valueOf(cchc.getGioTangCa()).equalsIgnoreCase(spnTangCa.toString())) {
                    thoaMan = true;
                }
            }
            if (cmbPhongBan.getSelectedIndex() != -1) {
                if(cchc.getNhanVienHanhChanh().getPhongBan().getTenPhongBan().toLowerCase().equalsIgnoreCase(cmbPhongBan.getSelectedItem().toString())) {
                    thoaMan = true;
                }
            }
            if (cmbTrangThai.getSelectedIndex() != -1) {
                if((cchc.getTrangThai()? "Đi làm":"Nghỉ").toLowerCase().equalsIgnoreCase(cmbTrangThai.getSelectedItem().toString())) {
                    thoaMan = true;
                }
            }
            
            if (thoaMan) {
                Object[] rowData = {
                    i++,
                    cchc.getNhanVienHanhChanh().getPhongBan().getTenPhongBan(),
                    cchc.getNhanVienHanhChanh().getHoVaTen(),
                    cchc.getNhanVienHanhChanh().getMaNhanVienHanhChanh(),
                    dinhDangNgay.format(cchc.getNgayLamViec()),
                    cchc.getTrangThai(),
                    cchc.getGioTangCa()
                };
                modelChamCongHanhChinh.addRow(rowData);
            }
        }
    }
    private void timkiemCCSP(){
         modelChamCongSanPham.setRowCount(0); // Xóa dữ liệu hiện tại trong bảng để hiển thị kết quả tìm kiếm mới
         
         int i=1;
        for(ChamCongSanPham ccsx : chamCongSanPham_Dao.getChamCongSanPham()){
            boolean thoaMan = false;
            if (!txtMa.getText().isEmpty()) {
                if (ccsx.getNhanVienSanXuat().getMaNhanVienSanXuat().equalsIgnoreCase(txtMa.getText())) {
                    thoaMan = true;
                }
            }
            if (!txtTen.getText().isEmpty()) {
                if (ccsx.getNhanVienSanXuat().getHoVaTen().equalsIgnoreCase(txtTen.getText())) {
                    thoaMan = true;
                }
            }
            if (chkTu.isSelected()) {
                System.out.println(dinhDangNgay.format(dchNgayChamCong.getDate()));
                 System.out.println(dinhDangNgay.format(dchTu.getDate()));
                System.out.println(dinhDangNgay.format(ccsx.getNgayLamViec()));
                if (dchTu.getDate() != null && dchNgayChamCong.getDate() != null) {
                    if (!ccsx.getNgayLamViec().before(dchTu.getDate()) &&
                        ccsx.getNgayLamViec().before(dchNgayChamCong.getDate())) {
                        thoaMan = true;
                    }
                }
            }   else{
                if (dchNgayChamCong.getDate() != null) {
                    if(dinhDangNgay.format(ccsx.getNgayLamViec()).equalsIgnoreCase(dinhDangNgay.format(dchNgayChamCong.getDate()))) {
                        thoaMan = true;
                    }
                }
            }
            if (cmbPhanXuong.getSelectedIndex() != -1) {
                if(ccsx.getNhanVienSanXuat().getPhanXuong().getTenPhanXuong().toLowerCase().equalsIgnoreCase(cmbPhanXuong.getSelectedItem().toString())) {
                    thoaMan = true;
                }
            }
            if (cmbCongDoan.getSelectedIndex() != -1) {
                if(ccsx.getCongDoan().getTenCongDoan().toLowerCase().equalsIgnoreCase(cmbCongDoan.getSelectedItem().toString())) {
                    thoaMan = true;
                }
            }
            if (cmbSanPham.getSelectedIndex() != -1) {
                if(ccsx.getSanPham().getTenSanPham().toLowerCase().equalsIgnoreCase(cmbSanPham.getSelectedItem().toString())) {
                    thoaMan = true;
                }
            }
            if (!txtSoLuong.getText().isEmpty()) {
                if (String.valueOf(ccsx.getSoLuong()).equalsIgnoreCase(txtSoLuong.getText())) {
                    thoaMan = true;
                }
            }
            
            if (thoaMan) {
                Object[] rowData = {
                    i++,
                    ccsx.getNhanVienSanXuat().getPhanXuong().getTenPhanXuong(),
                    ccsx.getNhanVienSanXuat().getHoVaTen(),
                    ccsx.getNhanVienSanXuat().getMaNhanVienSanXuat(),
                    dinhDangNgay.format(ccsx.getNgayLamViec()),
                    ccsx.getSanPham().getTenSanPham(),
                    ccsx.getCongDoan().getTenCongDoan(),
                    ccsx.getDonGia(),
                    ccsx.getSoLuong(),
                    ccsx.getTongTien()
                };
                modelChamCongSanPham.addRow(rowData);
            }
            
        }
    }
    
    private void doDuLieu() {
        doDuLieuNVHC();
        doDuLieuCCSP();
    }
    private void doDuLieuNVHC() {
        int i=1;
        for(ChamCongNhanVien cchc : chamCongHanhChanh_Dao.getDanhSachChamCongNhanVien()){
            Object[] objects = {
                i++,
                cchc.getNhanVienHanhChanh().getPhongBan().getTenPhongBan(),
                cchc.getNhanVienHanhChanh().getHoVaTen(),
                cchc.getNhanVienHanhChanh().getMaNhanVienHanhChanh(),
                dinhDangNgay.format(cchc.getNgayLamViec()),
                cchc.getTrangThai(),
                cchc.getGioTangCa()
            };
            modelChamCongHanhChinh.addRow(objects);
            
        }
    }
    
    private void doDuLieuCCSP() {
        int i=1;
        for(ChamCongSanPham ccsx : chamCongSanPham_Dao.getChamCongSanPham()){
            Object[] objects = {
                i++,
                ccsx.getNhanVienSanXuat().getPhanXuong().getTenPhanXuong(),
                ccsx.getNhanVienSanXuat().getHoVaTen(),
                ccsx.getNhanVienSanXuat().getMaNhanVienSanXuat(),
                dinhDangNgay.format(ccsx.getNgayLamViec()),
                ccsx.getSanPham().getTenSanPham(),
                ccsx.getCongDoan().getTenCongDoan(),
                ccsx.getDonGia(),
                ccsx.getSoLuong(),
                ccsx.getTongTien()
            };
            modelChamCongSanPham.addRow(objects);
            
        }
    }
    
    // private Border_Selected border;
    private ChamCongSanPham_Dao chamCongSanPham_Dao;
    private ChamCongHanhChanh_Dao chamCongHanhChanh_Dao;
    private DefaultTableModel modelChamCongHanhChinh;
    private DefaultTableModel modelChamCongSanPham;
    private Border_Selected border_Selected;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroupTrangThai;
    private javax.swing.ButtonGroup btnThayDoiTim;
    private javax.swing.JButton btnTim;
    private javax.swing.JCheckBox chkTu;
    private javax.swing.JComboBox<String> cmbCongDoan;
    private javax.swing.JComboBox<String> cmbPhanXuong;
    private javax.swing.JComboBox<String> cmbPhongBan;
    private javax.swing.JComboBox<String> cmbSanPham;
    private javax.swing.JComboBox<String> cmbTrangThai;
    private com.toedter.calendar.JDateChooser dchNgayChamCong;
    private com.toedter.calendar.JDateChooser dchTu;
    private javax.swing.JButton jButton10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCongDoan;
    private javax.swing.JLabel lblPhongBan;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTangCa;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JRadioButton radNhanVienHanhChinh;
    private javax.swing.JRadioButton radNhanVienSanXuat;
    private javax.swing.JSpinner spnTangCa;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
